//: C08:RTTIandMultipleInheritance.cpp
#include <iostream>
#include <typeinfo>
using namespace std;

class BB {
public:
  virtual void f() {}
  virtual ~BB() {}
};

class B1 : virtual public BB {};
class B2 : virtual public BB {};
class MI : public B1, public B2 {};

int main() {
  BB* bbp = new MI; // Upcast
  // Правильное определение имени:
  cout << typeid(*bbp).name() << endl;
  // Dynamic_cast работает правильно:
  MI* mip = dynamic_cast<MI*>(bbp);
  // Принудительное преобразование типа
  // в старом стиле невозможно:
//! MI* mip2 = (MI*)bbp; // Ошибка компиляции
} ///:~